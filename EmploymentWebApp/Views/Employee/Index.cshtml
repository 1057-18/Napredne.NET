@model PaginatedList<EmployeeViewModel>
@{
    ViewData["Title"] = "Employee Register";
}

<div class="container-fluid" style="text-align: center">
    <h4>Employee Register</h4><br /><br />
    <table class="table table-hover table-responsive-sm" style="border-bottom: 1px solid #dee2e6">
        <thead class="table-info">
            <tr>
                <th scope="col"><a asp-action="AddOrEdit" class="btn btn-outline-dark" style="font-weight: bold; border: none;"><i class="far fa-plus-square"></i> Employee</a></th>
                <th scope="col">First Name</th>
                <th scope="col">Last Name</th>
                <th scope="col">Job Title</th>
                <th scope="col">Department</th>
                <th scope="col">Date Of Hire</th>
            </tr>
        </thead>
        <tbody>
            @foreach (EmployeeViewModel employeeViewModel in Model)
            {
                <tr onclick="location.href = '@(Url.Action("Details","Employee", new { id = employeeViewModel.EmployeeForm.Id }))'">
                    <th scope="row">@employeeViewModel.EmployeeForm.Id</th>
                    <td>@employeeViewModel.EmployeeForm.FirstName</td>
                    <td>@employeeViewModel.EmployeeForm.LastName</td>
                    <td>@employeeViewModel.EmployeeForm.JobTitle</td>
                    <td>@employeeViewModel.StringDepartment</td>
                    <td>@employeeViewModel.StringDateOfHire</td>
                    <!--<td>-->
                    <!--<a asp-action="Details" asp-route-id="@employeeViewModel.EmployeeForm.Id" class="text-secondary"><i class="fas fa-id-card-alt" style="padding-right: 2px"></i></a>-->
                    <!--<a asp-action="AddOrEdit" asp-route-id="@employeeViewModel.EmployeeForm.Id" class="text-secondary"><i class="fas fa-edit"></i></a>-->
                    <!--<a asp-action="Delete" asp-route-id="@employeeViewModel.EmployeeForm.Id" class="text-secondary" onclick="return confirm('Are you sure you want to delete this record?')"><i class="fas fa-trash"></i></a>-->
                    <!--</td>-->
                </tr>
            }
        </tbody>
    </table>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <nav aria-label="Page navigation" style="padding-top: 15px">
        <ul class="pagination pagination-lg justify-content-center">
            <li class="page-item @prevDisabled">
                <a class="page-link" href="@(Url.Action("Index", "Employee", new { pageNumber =  PaginatedList<EmployeeViewModel>.PageIndex - 1}))" aria-label="Previous">
                    <i class="fas fa-chevron-left"></i>
                </a>
            </li>
            @for (int i = 1; i < PaginatedList<EmployeeViewModel>.TotalPages + 1; i++)
            {
                if (PaginatedList<EmployeeViewModel>.PageIndex == i)
                {
                    <li class="page-item active"><a class="page-link" href="@(Url.Action("Index","Employee", new { pageNumber = i }))">@i</a></li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" href="@(Url.Action("Index","Employee", new { pageNumber = i }))">@i</a></li>
                }
            }
            <li class="page-item @nextDisabled">
                <a class="page-link" href="@(Url.Action("Index", "Employee", new { pageNumber =  PaginatedList<EmployeeViewModel>.PageIndex + 1}))" aria-label="Next">
                    <i class="fas fa-chevron-right"></i>
                </a>
            </li>
        </ul>
    </nav>
</div>

