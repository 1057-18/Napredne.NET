@model PaginatedList<PaymentViewModel>
@{
    ViewData["Title"] = "Payment Register";
}

<div class="container-fluid" style="text-align: center">
    <h4>Payment Register</h4><br /><br />
    <table class="table table-hover table-responsive-sm">
        <thead class="table-warning">
            <tr>
                <th scope="col"><a asp-action="AddOrEdit" class="btn btn-outline-light" style="font-weight: bold; border: none;"><i class="far fa-plus-square"></i> Payment</a></th>
                <th scope="col">For</th>
                <th scope="col">Payment Type</th>
                <th scope="col">Date</th>
                <th scope="col">Time</th>
                <th scope="col">Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (PaymentViewModel paymentViewModel in Model)
            {
                <tr onclick="location.href = '@(Url.Action("Details", "Payment", new { id = paymentViewModel.PaymentForm.Id }))'">
                    <th scope="row">@paymentViewModel.PaymentForm.Id</th>
                    <td>@(paymentViewModel.PaymentForm.Employee.FirstName + " " + paymentViewModel.PaymentForm.Employee.LastName)</td>
                    <td>@paymentViewModel.PaymentForm.PaymentType</td>
                    <td>@paymentViewModel.StringDate</td>
                    <td>@paymentViewModel.StringTime</td>
                    <td>@paymentViewModel.StringAmount</td>
                    <!--<td>-->
                    <!--<a asp-action="Details" asp-route-id="@paymentViewModel.PaymentForm.Id" class="text-secondary"><i class="fas fa-list" style="padding-right: 4px"></i></a>-->
                    <!--<a asp-action="AddOrEdit" asp-route-id="@paymentViewModel.PaymentForm.Id" class="text-secondary"><i class="fas fa-edit"></i></a>-->
                    <!--<a asp-action="Delete" asp-route-id="@paymentViewModel.PaymentForm.Id" class="text-secondary" onclick="return confirm('Are you sure you want to delete this record?')"><i class="fas fa-trash"></i></a>-->
                    <!--</td>-->
                </tr>
            }
        </tbody>
    </table>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <nav aria-label="Page navigation" style="padding-top: 15px">
        <ul class="pagination pagination-lg justify-content-center">
            <li class="page-item @prevDisabled">
                <a class="page-link" href="@(Url.Action("Index", "Payment", new { pageNumber =  PaginatedList<PaymentViewModel>.PageIndex - 1}))" aria-label="Previous">
                    <i class="fas fa-chevron-left"></i>
                </a>
            </li>
            @for (int i = 1; i < PaginatedList<PaymentViewModel>.TotalPages + 1; i++)
            {
                if (PaginatedList<PaymentViewModel>.PageIndex == i)
                {
                    <li class="page-item active"><a class="page-link" style="background-color: #cf8f5f" href="@(Url.Action("Index","Payment", new { pageNumber = i }))">@i</a></li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" href="@(Url.Action("Index","Payment", new { pageNumber = i }))">@i</a></li>
                }
            }
            <li class="page-item @nextDisabled">
                <a class="page-link" href="@(Url.Action("Index", "Payment", new { pageNumber =  PaginatedList<PaymentViewModel>.PageIndex + 1}))" aria-label="Next">
                    <i class="fas fa-chevron-right"></i>
                </a>
            </li>
        </ul>
    </nav>
</div>
